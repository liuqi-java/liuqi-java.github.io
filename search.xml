<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo系列 - Next主题</title>
    <url>//65393fae.html</url>
    <content><![CDATA[<p><a href="http://theme-next.iissnan.com/getting-started.html">Next</a> 是一款精于心，简于形 Hexo 主题</p>
<p>也可以获取 <a href="https://hexo.io/themes/">更多主题</a></p>
<a id="more"></a>



<h2 id="安装-NexT"><a href="#安装-NexT" class="headerlink" title="安装 NexT"></a>安装 NexT</h2><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下。</p>
<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
</ul>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>使用Git 克隆主题<br>在终端窗口下，定位到 Hexo 站点目录下</p>
<p><font color=#FF0000 >注意：官方文档上克隆的地址为：<a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a> 当前版本和<code>Hexo 5.0.x</code> 应该是有兼容问题，笔者试过了，死活用不了，请大家绕坑</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> your-hexo-site</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>打开Hexo <code>_config.yml</code>，找到 theme 字段，并将其值更改为 next</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>清除缓存，然后运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run clean</span><br><span class="line">$ npm run server</span><br></pre></td></tr></table></figure>
<p>因为Hexo <code>package.json</code>，里面有npm 脚本，所以这里使用npm 指令</p>
<p>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>
<p><img src="http://theme-next.iissnan.com/uploads/five-minutes-setup/validation-default-scheme-mac.png" alt="Screenshot 1"></p>
<p>当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse</p>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - Next相关文章</title>
    <url>//f02d91d0.html</url>
    <content><![CDATA[<p>使用<a href="https://github.com/tea3/hexo-related-popular-posts">hexo-related-popular-posts插件</a>，实现博客相关文章推荐</p>
<a id="more"></a>

<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
<li>hexo-generator-searchdb 版本：<code>5.0.0</code></li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>如果有安装<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝镜像</a>，可以使用cnpm安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cnpm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>
<p>如果安装遇到了问题，请看<a href="#issues">这里</a></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在next 主题配置文件<code>_config.yml</code>，找到以下配置，开启开关</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># Custom header, leave empty to use the default one</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0</span></span><br><span class="line">    <span class="comment">#isDate: false</span></span><br><span class="line">    <span class="comment">#isImage: false</span></span><br><span class="line">    <span class="comment">#isExcerpt: false</span></span><br></pre></td></tr></table></figure>

<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>清除缓存，打包，然后运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run clean</span><br><span class="line">$ npm run build</span><br><span class="line">$ npm run server</span><br></pre></td></tr></table></figure>

<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a><span id="issues">问题</span></h3><p><font color=#FF0000 >注意：我的安装过程很坎坷</font><br>一些安装过程中遇到的问题</p>
<ul>
<li><p>npm install hexo-related-popular-posts –save 安装失败/安装后项目不能运行<br>解决方案：执行 npm uninstall hexo-related-popular-posts –save，然后使用cnpm方式安装</p>
</li>
<li><p>cnpm install hexo-related-popular-posts –save 安装失败<br><a href="https://github.com/cnpm/cnpmjs.org/issues/1079">解决方案</a>：执行 cnpm install hexo-related-popular-posts –save –no-cache</p>
</li>
<li><p>TypeError: The “path” argument must be of type string. Received null<br>解决方案：npm run clean &amp;&amp; npm run build &amp;&amp; npm run server</p>
</li>
</ul>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - Next站内搜索</title>
    <url>//16e86f25.html</url>
    <content><![CDATA[<p>使用<a href="https://github.com/theme-next/hexo-generator-searchdb">hexo-generator-searchdb插件</a>，实现博客站内搜索</p>
<a id="more"></a>

<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
<li>hexo-generator-searchdb 版本：<code>1.3.2</code></li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>如果有安装<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝镜像</a>，可以使用cnpm安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cnpm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>

<h3 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h3><p>在hexo配置文件 <code>_config.yml</code> 添加以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># search hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure>

<h3 id="配置next"><a href="#配置next" class="headerlink" title="配置next"></a>配置next</h3><p>在next配置文件 <code>_config.yml</code> 找到以下配置，并打开开关。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="验证搜索"><a href="#验证搜索" class="headerlink" title="验证搜索"></a>验证搜索</h3><p>清除缓存，然后运行<br><font color=#FF0000 >注意：清除缓存很重要，我就是一直没有执行清楚缓存，导致搜索不可用</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run clean</span><br><span class="line">$ npm run server</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - Next评论系统</title>
    <url>//2c2a83a9.html</url>
    <content><![CDATA[<p>使用<a href="https://valine.js.org/">valine</a>，实现博客站内评论系统</p>
<a id="more"></a>

<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
<li>valine 版本：<code>1.4.14</code></li>
</ul>
<h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><p><a href="https://valine.js.org/quickstart.html">推荐官方文档</a></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>找到next <code>_config.yml</code>，修改以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="comment"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure>

<p>如果你想控制文章是否允许评论，可以设置文章<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a><br><code>comments</code> 属性</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>


<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>清除缓存，打包，然后运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run clean</span><br><span class="line">$ npm run build</span><br><span class="line">$ npm run server</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - Next配置</title>
    <url>//5d284137.html</url>
    <content><![CDATA[<p>由于Hexo 入门文章，写的很简单，接下来会讲如何配置Hexo 一些基本信息，如何将博客部署到 GitHub。<br>和Next 主题配置</p>
<a id="more"></a>

<h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
</ul>
<h2 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h2><p>以下配置都在Hexo <code>_config.yml</code> 配置文件修改</p>
<h3 id="网站信息"><a href="#网站信息" class="headerlink" title="网站信息"></a>网站信息</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">sun</span> <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;分享技术，记录生活&#x27;</span> <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;主要是不想做条咸鱼&#x27;</span> <span class="comment">#网站简介</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">sun</span> <span class="comment">#作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">#语言</span></span><br></pre></td></tr></table></figure>

<p><code>language</code> 和主题相关 <code>Next 7.8.0</code> <code>简体中文</code> 使用的 <code>zh-CN</code> 官方文档上是说使用<code>zh-Hans</code> 是以前的版本使用的<br>配置详情见 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 配置</a></p>
<h3 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h3><p>到 <a href="https://github.com/">GitHub</a> 新建一个 repository。如果你希望你的站点能通过 &lt;你的 GitHub 用户名&gt;.github.io 域名访问，你的 repository 应该直接命名为 &lt;你的 GitHub 用户名&gt;.github.io</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span> <span class="comment">#类型</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;你的</span> <span class="string">GitHub</span> <span class="string">用户名&gt;/&lt;你的</span> <span class="string">GitHub</span> <span class="string">用户名&gt;.github.io.git</span> <span class="comment">#repository</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment">#分支</span></span><br></pre></td></tr></table></figure>

<p>清除缓存，打包，部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run clean</span><br><span class="line">$ npm run build</span><br><span class="line">$ npm run deploy</span><br></pre></td></tr></table></figure>
<h2 id="Next-配置"><a href="#Next-配置" class="headerlink" title="Next 配置"></a>Next 配置</h2><p>以下未说明的配置都在Next <code>themex/next/_config.yml</code> 配置文件修改</p>
<h3 id="Schemes-Next-主题"><a href="#Schemes-Next-主题" class="headerlink" title="Schemes Next 主题"></a>Schemes Next 主题</h3><p>Next 提供四种主题，使用其中一种即可</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>

<h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>home：首页<br>about：关于<br>tags：标签<br>categories：分类<br>archives：归档</p>
<p>菜单默认只打开了<code>home</code> <code>archives</code>菜单</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="comment">#  schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="comment">#  sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="comment">#  commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>我们打开注释<code>tags</code> <code>categories</code> <code>about</code>菜单<br>由于这几个菜单是没有对应的文件夹，你需要执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new page <span class="string">&quot;tags&quot;</span></span><br><span class="line">$ hexo new page <span class="string">&quot;categories&quot;</span></span><br><span class="line">$ hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>
<p>会在每个文件夹下创建一个index.md文件</p>
<p>对应修改一下index.md文件</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-08-18 15:54:31</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-08-18 15:54:41</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line">date: 2020-08-18 16:09:29</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>文件最上方以 <code>---</code> 分隔的区域是Front-matter ，用于指定个别文件的变量<br>如果你想在文章中设置 标签<code>tags</code> 和分类<code>categories</code> 可以查看下方<br><a href="https://hexo.io/zh-cn/docs/front-matter">更多Front-matter</a></p>
<h3 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h3><p>设置侧边栏的位置，修改<code>sidebar.position</code> 的值，支持的选项有：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line"><span class="section">#  position: left #靠左放置</span></span><br><span class="line">  position: right #靠右放置</span><br></pre></td></tr></table></figure>

<h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>1.完整的互联网 URI，可以跳过第一步<br>2.站内的图片地址</p>
<p>第一步：将头像放置主题目录下的<code>source/images/</code><br>第二步：修改配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span></span><br></pre></td></tr></table></figure>

<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p><code>links</code> 可以添加多个</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 友情链接</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">友链</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">block</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">Title:</span> <span class="string">http://theme-next.iissnan.com</span></span><br></pre></td></tr></table></figure>

<h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><p>设置文章目录全部展开</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 目录全部展开</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="文章底部其他渠道"><a href="#文章底部其他渠道" class="headerlink" title="文章底部其他渠道"></a>文章底部其他渠道</h3><p>文章底部显示 欢迎关注我的其它发布渠道，例如微信公众号</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 关注我的其他渠道</span></span><br><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="attr">WeChat:</span> <span class="string">/images/wechat_channel.jpg</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-weixin</span></span><br></pre></td></tr></table></figure>

<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>代码块开启复制功能</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#代码高亮</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span> <span class="comment"># 代码高亮样式</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开启复制按钮</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span> <span class="comment"># 复制显示返回结果</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">default</span> <span class="comment"># 代码块样式</span></span><br></pre></td></tr></table></figure>

<h3 id="顶部阅读进度"><a href="#顶部阅读进度" class="headerlink" title="顶部阅读进度"></a>顶部阅读进度</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 顶部阅读进度</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>

<h3 id="Follow-me-on-GitHub"><a href="#Follow-me-on-GitHub" class="headerlink" title="Follow me on GitHub"></a>Follow me on GitHub</h3><p>右上角的GitHub 角标，打开开关，设置permalink即可</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/username</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<p>完</p>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - 入门</title>
    <url>//3f61c6b7.html</url>
    <content><![CDATA[<p>入门<a href="https://hexo.io/">Hexo</a> 使用Hexo 快速搭建个人博客</p>
<a id="more"></a>

<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Node 版本：<code>10.13.0+</code></li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>使用 npm 安装 Hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<h3 id="Hexo-文件夹说明"><a href="#Hexo-文件夹说明" class="headerlink" title="Hexo 文件夹说明"></a>Hexo 文件夹说明</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml  网站的配置信息</span><br><span class="line">├── package.json  应用程序的信息</span><br><span class="line">├── scaffolds  模版文件夹</span><br><span class="line">├── source  资源文件夹</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes  主题文件夹</span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p>然后通过<a href="http://localhost:4000/">http://localhost:4000</a>访问</p>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo系列 - Next个性化配置</title>
    <url>//ccb6e9a2.html</url>
    <content><![CDATA[<p>看着别人的Next 主题炫酷的很，自己的很low，怎么办。不慌盘它</p>
<a id="more"></a>

<h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><ul>
<li>Hexo 版本：<code>5.0.x</code></li>
<li>Next 版本：<code>7.8.0</code></li>
</ul>
<p>如果和以上版本不同，请参考具体版本配置</p>
<h3 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h3><p>有以下三种特效<code>爱心特效</code> <code>礼花特效</code> <code>爆炸特性</code><br>在<code>themes/next/source/js/</code>文件夹下新建<code>cursor</code>文件夹</p>
<h4 id="爱心特效"><a href="#爱心特效" class="headerlink" title="爱心特效"></a>爱心特效</h4><p>新建文件<code>love.min.js</code>，将以下代码复制到文件，将js文件复制到<code>themes/next/source/js/cursor/</code>文件夹</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">&quot;left:&quot;</span>+d[e].x+<span class="string">&quot;px;top:&quot;</span>+d[e].y+<span class="string">&quot;px;opacity:&quot;</span>+d[e].alpha+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].scale+<span class="string">&quot;,&quot;</span>+d[e].scale+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].color+<span class="string">&quot;;z-index:99999&quot;</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;div&quot;</span>);a.className=<span class="string">&quot;heart&quot;</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">&quot;style&quot;</span>);a.type=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<h4 id="礼花特效"><a href="#礼花特效" class="headerlink" title="礼花特效"></a>礼花特效</h4><p>新建文件<code>fireworks.js</code>，将以下代码复制到文件，将js文件复制到<code>themes/next/source/js/cursor/</code>文件夹</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.position = &#123; ...this.origin &#125;</span><br><span class="line">    <span class="built_in">this</span>.color = color</span><br><span class="line">    <span class="built_in">this</span>.speed = speed</span><br><span class="line">    <span class="built_in">this</span>.angle = angle</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.renderCount = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    <span class="built_in">this</span>.context.fillStyle = <span class="built_in">this</span>.color</span><br><span class="line">    <span class="built_in">this</span>.context.beginPath()</span><br><span class="line">    <span class="built_in">this</span>.context.arc(<span class="built_in">this</span>.position.x, <span class="built_in">this</span>.position.y, <span class="number">2</span>, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">this</span>.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    <span class="built_in">this</span>.position.x = (<span class="built_in">Math</span>.sin(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.x</span><br><span class="line">    <span class="built_in">this</span>.position.y = (<span class="built_in">Math</span>.cos(<span class="built_in">this</span>.angle) * <span class="built_in">this</span>.speed) + <span class="built_in">this</span>.position.y + (<span class="built_in">this</span>.renderCount * <span class="number">0.3</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Boom</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">    <span class="built_in">this</span>.origin = origin</span><br><span class="line">    <span class="built_in">this</span>.context = context</span><br><span class="line">    <span class="built_in">this</span>.circleCount = circleCount</span><br><span class="line">    <span class="built_in">this</span>.area = area</span><br><span class="line">    <span class="built_in">this</span>.stop = <span class="literal">false</span></span><br><span class="line">    <span class="built_in">this</span>.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomArray(range) &#123;</span><br><span class="line">    <span class="keyword">const</span> length = range.length</span><br><span class="line">    <span class="keyword">const</span> randomIndex = <span class="built_in">Math</span>.floor(length * <span class="built_in">Math</span>.random())</span><br><span class="line">    <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomColor() &#123;</span><br><span class="line">    <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range) + <span class="built_in">this</span>.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomRange(start, end) &#123;</span><br><span class="line">    <span class="keyword">return</span> (end - start) * <span class="built_in">Math</span>.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.circleCount; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> circle = <span class="keyword">new</span> Circle(&#123;</span><br><span class="line">        context: <span class="built_in">this</span>.context,</span><br><span class="line">        origin: <span class="built_in">this</span>.origin,</span><br><span class="line">        color: <span class="built_in">this</span>.randomColor(),</span><br><span class="line">        angle: <span class="built_in">this</span>.randomRange(<span class="built_in">Math</span>.PI - <span class="number">1</span>, <span class="built_in">Math</span>.PI + <span class="number">1</span>),</span><br><span class="line">        speed: <span class="built_in">this</span>.randomRange(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="built_in">this</span>.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (circle.position.x &gt; <span class="built_in">this</span>.area.width || circle.position.y &gt; <span class="built_in">this</span>.area.height) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.circles.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.circles.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="built_in">this</span>.stop = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    <span class="built_in">this</span>.circles.forEach(<span class="function"><span class="params">circle</span> =&gt;</span> circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CursorSpecialEffects</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="built_in">this</span>.computerCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderCanvas = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext = <span class="built_in">this</span>.computerCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">    <span class="built_in">this</span>.renderContext = <span class="built_in">this</span>.renderCanvas.getContext(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.globalWidth = <span class="built_in">window</span>.innerWidth</span><br><span class="line">    <span class="built_in">this</span>.globalHeight = <span class="built_in">window</span>.innerHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleMouseDown(e) &#123;</span><br><span class="line">    <span class="keyword">const</span> boom = <span class="keyword">new</span> Boom(&#123;</span><br><span class="line">      origin: &#123; <span class="attr">x</span>: e.clientX, <span class="attr">y</span>: e.clientY &#125;,</span><br><span class="line">      context: <span class="built_in">this</span>.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        width: <span class="built_in">this</span>.globalWidth,</span><br><span class="line">        height: <span class="built_in">this</span>.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    <span class="built_in">this</span>.booms.push(boom)</span><br><span class="line">    <span class="built_in">this</span>.running || <span class="built_in">this</span>.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlePageHide() &#123;</span><br><span class="line">    <span class="built_in">this</span>.booms = []</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    <span class="keyword">const</span> style = <span class="built_in">this</span>.renderCanvas.style</span><br><span class="line">    style.position = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">    style.top = style.left = <span class="number">0</span></span><br><span class="line">    style.zIndex = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">    style.pointerEvents = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">    style.width = <span class="built_in">this</span>.renderCanvas.width = <span class="built_in">this</span>.computerCanvas.width = <span class="built_in">this</span>.globalWidth</span><br><span class="line">    style.height = <span class="built_in">this</span>.renderCanvas.height = <span class="built_in">this</span>.computerCanvas.height = <span class="built_in">this</span>.globalHeight</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.body.append(<span class="built_in">this</span>.renderCanvas)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, <span class="built_in">this</span>.handleMouseDown.bind(<span class="built_in">this</span>))</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;pagehide&#x27;</span>, <span class="built_in">this</span>.handlePageHide.bind(<span class="built_in">this</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    <span class="built_in">this</span>.running = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.booms.length == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.running = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(<span class="built_in">this</span>.run.bind(<span class="built_in">this</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.computerContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.booms.forEach(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (boom.stop) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.booms.splice(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.renderContext.drawImage(<span class="built_in">this</span>.computerCanvas, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.globalWidth, <span class="built_in">this</span>.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br></pre></td></tr></table></figure>

<h4 id="爆炸特效"><a href="#爆炸特效" class="headerlink" title="爆炸特效"></a>爆炸特效</h4><p>新建文件<code>explosion.min.js</code>，将以下代码复制到文件，将js文件复制到<code>themes/next/source/js/cursor/</code>文件夹</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>,i=<span class="built_in">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">&quot;use strict&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">&quot;#F00&quot;</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="built_in">this</span>,i=<span class="built_in">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">&quot;px&quot;</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">&quot;px&quot;</span>,canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">&quot;sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.target.id&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.target.nodeName&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在<code>themes/next/layout/</code>文件夹下新建<code>_custom</code>文件夹<br>在<code>themes/next/layout/_custom/</code>文件夹下新建<code>custom.swig</code>文件，将以下代码复制到文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;% if theme.cursor_effect.type &#x3D;&#x3D; &quot;fireworks&quot; %&#125;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type &#x3D;&#x3D; &quot;explosion&quot; %&#125;</span><br><span class="line">    &lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;explosion.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type &#x3D;&#x3D; &quot;love&quot; %&#125;</span><br><span class="line">    &lt;script src&#x3D;&quot;&#x2F;js&#x2F;cursor&#x2F;love.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>添加以下配置到Next <code>_config.yml</code> 配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 点击特效</span></span><br><span class="line"><span class="attr">cursor_effect:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">love</span>  <span class="comment"># fireworks：礼花 | explosion：爆炸 | love：浮出爱心</span></span><br></pre></td></tr></table></figure>

<h3 id="设置背景动画"><a href="#设置背景动画" class="headerlink" title="设置背景动画"></a>设置背景动画</h3><p>next 有自带的背景动画，在以下配置中开启开关。在<code>three_waves</code> <code>canvas_lines</code> <code>canvas_sphere</code>三个配置中开启其中一种背景</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置「背景动画」</span></span><br><span class="line"><span class="attr">three:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关</span></span><br><span class="line">  <span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">canvas_lines:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>找到以下配置，打开注释即可使用</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># Internal version: 1.0.0</span></span><br><span class="line">  <span class="attr">three:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three.min.js</span></span><br><span class="line">  <span class="attr">three_waves:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/three-waves.min.js</span></span><br><span class="line">  <span class="attr">canvas_lines:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/canvas_lines.min.js</span></span><br><span class="line">  <span class="attr">canvas_sphere:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-three@1/canvas_sphere.min.js</span></span><br></pre></td></tr></table></figure>

<h3 id="设置背景彩带"><a href="#设置背景彩带" class="headerlink" title="设置背景彩带"></a>设置背景彩带</h3><p>找到以下配置，开启配置开关。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置canvas背景彩带</span></span><br><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">90</span> <span class="comment"># The width of the ribbon</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span> <span class="comment"># The transparency of the ribbon</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># The display level of the ribbon</span></span><br></pre></td></tr></table></figure>

<p>找到以下配置，这是next 自带的点击生成彩带js，可以打开注释，自己先试一下效果。<br>但是我们需要设置 随机生成的动画彩带效果</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># Internal version: 1.0.0</span></span><br><span class="line">  <span class="comment"># canvas_ribbon: //cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-ribbon@1/canvas-ribbon.js</span></span><br></pre></td></tr></table></figure>

<p>在<code>themes/next/source/js/</code>文件夹下新建<code>ribbon</code>文件夹<br>新建文件<code>ribbon.js</code>，将以下代码复制到文件。将js文件复制到<code>themes/next/source/js/ribbon/</code>文件夹</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Ribbons Class File.</span></span><br><span class="line"><span class="comment"> * Creates low-poly ribbons background effect inside a target container.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">name, factory</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> === <span class="string">&quot;object&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">window</span>[name] = factory();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)(<span class="string">&quot;Ribbons&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _w = <span class="built_in">window</span>,</span><br><span class="line">    _b = <span class="built_in">document</span>.body,<span class="comment">//返回html dom中的body节点 即&lt;body&gt;</span></span><br><span class="line">    _d = <span class="built_in">document</span>.documentElement;<span class="comment">//返回html dom中的root 节点 即&lt;html&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// random helper</span></span><br><span class="line">    <span class="keyword">var</span> random = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">1</span>) <span class="comment">// only 1 argument</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(<span class="built_in">arguments</span>[<span class="number">0</span>])) <span class="comment">// extract index from array</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">var</span> index = <span class="built_in">Math</span>.round(random(<span class="number">0</span>, <span class="built_in">arguments</span>[<span class="number">0</span>].length - <span class="number">1</span>));</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>][index];</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">return</span> random(<span class="number">0</span>, <span class="built_in">arguments</span>[<span class="number">0</span>]); <span class="comment">// assume numeric</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">2</span>) <span class="comment">// two arguments range</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">Math</span>.random() * (<span class="built_in">arguments</span>[<span class="number">1</span>] - <span class="built_in">arguments</span>[<span class="number">0</span>]) + <span class="built_in">arguments</span>[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// default</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// screen helper</span></span><br><span class="line">    <span class="keyword">var</span> screenInfo = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> width = <span class="built_in">Math</span>.max(<span class="number">0</span>, _w.innerWidth || _d.clientWidth || _b.clientWidth || <span class="number">0</span>),</span><br><span class="line">        height = <span class="built_in">Math</span>.max(<span class="number">0</span>, _w.innerHeight || _d.clientHeight || _b.clientHeight || <span class="number">0</span>),</span><br><span class="line">        scrollx = <span class="built_in">Math</span>.max(<span class="number">0</span>, _w.pageXOffset || _d.scrollLeft || _b.scrollLeft || <span class="number">0</span>) - (_d.clientLeft || <span class="number">0</span>),</span><br><span class="line">        scrolly = <span class="built_in">Math</span>.max(<span class="number">0</span>, _w.pageYOffset || _d.scrollTop || _b.scrollTop || <span class="number">0</span>) - (_d.clientTop || <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            width: width,</span><br><span class="line">            height: height,</span><br><span class="line">            ratio: width / height,</span><br><span class="line">            centerx: width / <span class="number">2</span>,</span><br><span class="line">            centery: height / <span class="number">2</span>,</span><br><span class="line">            scrollx: scrollx,</span><br><span class="line">            scrolly: scrolly &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// mouse/input helper</span></span><br><span class="line">    <span class="keyword">var</span> mouseInfo = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> screen = screenInfo(e),</span><br><span class="line">        mousex = e ? <span class="built_in">Math</span>.max(<span class="number">0</span>, e.pageX || e.clientX || <span class="number">0</span>) : <span class="number">0</span>,</span><br><span class="line">        mousey = e ? <span class="built_in">Math</span>.max(<span class="number">0</span>, e.pageY || e.clientY || <span class="number">0</span>) : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            mousex: mousex,</span><br><span class="line">            mousey: mousey,</span><br><span class="line">            centerx: mousex - screen.width / <span class="number">2</span>,</span><br><span class="line">            centery: mousey - screen.height / <span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// point object</span></span><br><span class="line">    <span class="keyword">var</span> Point = <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.x = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.y = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.set(x, y);</span><br><span class="line">    &#125;;</span><br><span class="line">    Point.prototype = &#123;</span><br><span class="line">        <span class="keyword">constructor</span>: Point,</span><br><span class="line"></span><br><span class="line">        set: function (x, y)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = x || <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.y = y || <span class="number">0</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        copy: <span class="function"><span class="keyword">function</span> (<span class="params">point</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x = point.x || <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.y = point.y || <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        multiply: <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x *= x || <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">this</span>.y *= y || <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        divide: <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x /= x || <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">this</span>.y /= y || <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        add: <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x += x || <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.y += y || <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        subtract: <span class="function"><span class="keyword">function</span> (<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x -= x || <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">this</span>.y -= y || <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        clampX: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x = <span class="built_in">Math</span>.max(min, <span class="built_in">Math</span>.min(<span class="built_in">this</span>.x, max));</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        clampY: <span class="function"><span class="keyword">function</span> (<span class="params">min, max</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.y = <span class="built_in">Math</span>.max(min, <span class="built_in">Math</span>.min(<span class="built_in">this</span>.y, max));</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        flipX: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.x *= <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        flipY: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.y *= <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125; &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// class constructor</span></span><br><span class="line">    <span class="keyword">var</span> Factory = <span class="function"><span class="keyword">function</span> (<span class="params">options</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._canvas = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>._context = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>._sto = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>._width = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>._height = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>._scroll = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>._ribbons = [];</span><br><span class="line">        <span class="built_in">this</span>._options = &#123;</span><br><span class="line">            <span class="comment">// ribbon color HSL saturation amount</span></span><br><span class="line">            colorSaturation: <span class="string">&quot;80%&quot;</span>,</span><br><span class="line">            <span class="comment">// ribbon color HSL brightness amount</span></span><br><span class="line">            colorBrightness: <span class="string">&quot;60%&quot;</span>,</span><br><span class="line">            <span class="comment">// ribbon color opacity amount</span></span><br><span class="line">            colorAlpha: <span class="number">0.65</span>,</span><br><span class="line">            <span class="comment">// how fast to cycle through colors in the HSL color space</span></span><br><span class="line">            colorCycleSpeed: <span class="number">6</span>,</span><br><span class="line">            <span class="comment">// where to start from on the Y axis on each side (top|min, middle|center, bottom|max, random)</span></span><br><span class="line">            verticalPosition: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">            <span class="comment">// how fast to get to the other side of the screen</span></span><br><span class="line">            horizontalSpeed: <span class="number">200</span>,</span><br><span class="line">            <span class="comment">// how many ribbons to keep on screen at any given time</span></span><br><span class="line">            ribbonCount: <span class="number">3</span>,</span><br><span class="line">            <span class="comment">// add stroke along with ribbon fill colors</span></span><br><span class="line">            strokeSize: <span class="number">0</span>,</span><br><span class="line">            <span class="comment">// move ribbons vertically by a factor on page scroll</span></span><br><span class="line">            parallaxAmount: <span class="number">-0.5</span>,</span><br><span class="line">            <span class="comment">// add animation effect to each ribbon section over time</span></span><br><span class="line">            animateSections: <span class="literal">true</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>._onDraw = <span class="built_in">this</span>._onDraw.bind(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>._onResize = <span class="built_in">this</span>._onResize.bind(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>._onScroll = <span class="built_in">this</span>._onScroll.bind(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.setOptions(options);</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// class prototype</span></span><br><span class="line">    Factory.prototype = &#123;</span><br><span class="line">        <span class="keyword">constructor</span>: Factory,</span><br><span class="line"></span><br><span class="line">        // Set and merge local options</span><br><span class="line">        setOptions: function (options)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">&quot;object&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> options)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (options.hasOwnProperty(key))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">this</span>._options[key] = options[key];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Initialize the ribbons effect</span></span><br><span class="line">        init: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">this</span>._canvas = <span class="built_in">document</span>.createElement(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;display&quot;</span>] = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;position&quot;</span>] = <span class="string">&quot;fixed&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;margin&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;padding&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;border&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;outline&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;left&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                   <span class="built_in">this</span>._canvas.style[<span class="string">&quot;top&quot;</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                   <span class="built_in">this</span>._canvas.style[<span class="string">&quot;width&quot;</span>] = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">                   <span class="built_in">this</span>._canvas.style[<span class="string">&quot;height&quot;</span>] = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;z-index&quot;</span>] = <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.style[<span class="string">&quot;background-color&quot;</span>]=<span class="string">&quot;#1f1f1f&quot;</span>;</span><br><span class="line">                <span class="built_in">this</span>._canvas.id = <span class="string">&quot;bgCanvas&quot;</span>;    </span><br><span class="line">                <span class="built_in">this</span>._onResize();</span><br><span class="line"></span><br><span class="line">                <span class="built_in">this</span>._context = <span class="built_in">this</span>._canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>._context.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>._width, <span class="built_in">this</span>._height);</span><br><span class="line">                <span class="built_in">this</span>._context.globalAlpha = <span class="built_in">this</span>._options.colorAlpha;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="built_in">this</span>._onResize);</span><br><span class="line">                <span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, <span class="built_in">this</span>._onScroll);</span><br><span class="line">                <span class="built_in">document</span>.body.appendChild(<span class="built_in">this</span>._canvas);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="built_in">console</span>.warn(<span class="string">&quot;Canvas Context Error: &quot;</span> + e.toString());</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>._onDraw();</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create a new random ribbon and to the list</span></span><br><span class="line">        addRibbon: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// movement data</span></span><br><span class="line">            <span class="keyword">var</span> dir = <span class="built_in">Math</span>.round(random(<span class="number">1</span>, <span class="number">9</span>)) &gt; <span class="number">5</span> ? <span class="string">&quot;right&quot;</span> : <span class="string">&quot;left&quot;</span>,</span><br><span class="line">            stop = <span class="number">1000</span>,</span><br><span class="line">            hide = <span class="number">200</span>,</span><br><span class="line">            min = <span class="number">0</span> - hide,</span><br><span class="line">            max = <span class="built_in">this</span>._width + hide,</span><br><span class="line">            movex = <span class="number">0</span>,</span><br><span class="line">            movey = <span class="number">0</span>,</span><br><span class="line">            startx = dir === <span class="string">&quot;right&quot;</span> ? min : max,</span><br><span class="line">            starty = <span class="built_in">Math</span>.round(random(<span class="number">0</span>, <span class="built_in">this</span>._height));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// asjust starty based on options</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="regexp">/^(top|min)$/i</span>.test(<span class="built_in">this</span>._options.verticalPosition))</span><br><span class="line">            &#123;</span><br><span class="line">                starty = <span class="number">0</span> + hide;</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="regexp">/^(middle|center)$/i</span>.test(<span class="built_in">this</span>._options.verticalPosition))</span><br><span class="line">            &#123;</span><br><span class="line">                starty = <span class="built_in">this</span>._height / <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="regexp">/^(bottom|max)$/i</span>.test(<span class="built_in">this</span>._options.verticalPosition))</span><br><span class="line">            &#123;</span><br><span class="line">                starty = <span class="built_in">this</span>._height - hide;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ribbon sections data</span></span><br><span class="line">            <span class="keyword">var</span> ribbon = [],</span><br><span class="line">            point1 = <span class="keyword">new</span> Point(startx, starty),</span><br><span class="line">            point2 = <span class="keyword">new</span> Point(startx, starty),</span><br><span class="line">            point3 = <span class="literal">null</span>,</span><br><span class="line">            color = <span class="built_in">Math</span>.round(random(<span class="number">0</span>, <span class="number">360</span>)),</span><br><span class="line">            delay = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// buils ribbon sections</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (stop &lt;= <span class="number">0</span>) <span class="keyword">break</span>;stop--;</span><br><span class="line"></span><br><span class="line">                movex = <span class="built_in">Math</span>.round((<span class="built_in">Math</span>.random() * <span class="number">1</span> - <span class="number">0.2</span>) * <span class="built_in">this</span>._options.horizontalSpeed);</span><br><span class="line">                movey = <span class="built_in">Math</span>.round((<span class="built_in">Math</span>.random() * <span class="number">1</span> - <span class="number">0.5</span>) * (<span class="built_in">this</span>._height * <span class="number">0.25</span>));</span><br><span class="line"></span><br><span class="line">                point3 = <span class="keyword">new</span> Point();</span><br><span class="line">                point3.copy(point2);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dir === <span class="string">&quot;right&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    point3.add(movex, movey);</span><br><span class="line">                    <span class="keyword">if</span> (point2.x &gt;= max) <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">if</span> (dir === <span class="string">&quot;left&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    point3.subtract(movex, movey);</span><br><span class="line">                    <span class="keyword">if</span> (point2.x &lt;= min) <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// point3.clampY( 0, this._height );</span></span><br><span class="line"></span><br><span class="line">                ribbon.push(&#123; <span class="comment">// single ribbon section</span></span><br><span class="line">                    point1: <span class="keyword">new</span> Point(point1.x, point1.y),</span><br><span class="line">                    point2: <span class="keyword">new</span> Point(point2.x, point2.y),</span><br><span class="line">                    point3: point3,</span><br><span class="line">                    color: color,</span><br><span class="line">                    delay: delay,</span><br><span class="line">                    dir: dir,</span><br><span class="line">                    alpha: <span class="number">0</span>,</span><br><span class="line">                    phase: <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                point1.copy(point2);</span><br><span class="line">                point2.copy(point3);</span><br><span class="line"></span><br><span class="line">                delay += <span class="number">4</span>;</span><br><span class="line">                color += <span class="built_in">this</span>._options.colorCycleSpeed;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>._ribbons.push(ribbon);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Draw single section</span></span><br><span class="line">        _drawRibbonSection: <span class="function"><span class="keyword">function</span> (<span class="params">section</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (section)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (section.phase &gt;= <span class="number">1</span> &amp;&amp; section.alpha &lt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// done</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (section.delay &lt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    section.phase += <span class="number">0.02</span>;</span><br><span class="line">                    section.alpha = <span class="built_in">Math</span>.sin(section.phase) * <span class="number">1</span>;</span><br><span class="line">                    section.alpha = section.alpha &lt;= <span class="number">0</span> ? <span class="number">0</span> : section.alpha;</span><br><span class="line">                    section.alpha = section.alpha &gt;= <span class="number">1</span> ? <span class="number">1</span> : section.alpha;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>._options.animateSections)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">var</span> mod = <span class="built_in">Math</span>.sin(<span class="number">1</span> + section.phase * <span class="built_in">Math</span>.PI / <span class="number">2</span>) * <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (section.dir === <span class="string">&quot;right&quot;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            section.point1.add(mod, <span class="number">0</span>);</span><br><span class="line">                            section.point2.add(mod, <span class="number">0</span>);</span><br><span class="line">                            section.point3.add(mod, <span class="number">0</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            section.point1.subtract(mod, <span class="number">0</span>);</span><br><span class="line">                            section.point2.subtract(mod, <span class="number">0</span>);</span><br><span class="line">                            section.point3.subtract(mod, <span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        section.point1.add(<span class="number">0</span>, mod);</span><br><span class="line">                        section.point2.add(<span class="number">0</span>, mod);</span><br><span class="line">                        section.point3.add(<span class="number">0</span>, mod);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                &#123;section.delay -= <span class="number">0.5</span>;&#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> s = <span class="built_in">this</span>._options.colorSaturation,</span><br><span class="line">                l = <span class="built_in">this</span>._options.colorBrightness,</span><br><span class="line">                c = <span class="string">&quot;hsla(&quot;</span> + section.color + <span class="string">&quot;, &quot;</span> + s + <span class="string">&quot;, &quot;</span> + l + <span class="string">&quot;, &quot;</span> + section.alpha + <span class="string">&quot; )&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">this</span>._context.save();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._options.parallaxAmount !== <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">this</span>._context.translate(<span class="number">0</span>, <span class="built_in">this</span>._scroll * <span class="built_in">this</span>._options.parallaxAmount);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>._context.beginPath();</span><br><span class="line">                <span class="built_in">this</span>._context.moveTo(section.point1.x, section.point1.y);</span><br><span class="line">                <span class="built_in">this</span>._context.lineTo(section.point2.x, section.point2.y);</span><br><span class="line">                <span class="built_in">this</span>._context.lineTo(section.point3.x, section.point3.y);</span><br><span class="line">                <span class="built_in">this</span>._context.fillStyle = c;</span><br><span class="line">                <span class="built_in">this</span>._context.fill();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._options.strokeSize &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">this</span>._context.lineWidth = <span class="built_in">this</span>._options.strokeSize;</span><br><span class="line">                    <span class="built_in">this</span>._context.strokeStyle = c;</span><br><span class="line">                    <span class="built_in">this</span>._context.lineCap = <span class="string">&quot;round&quot;</span>;</span><br><span class="line">                    <span class="built_in">this</span>._context.stroke();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>._context.restore();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// not done yet</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Draw ribbons</span></span><br><span class="line">        _onDraw: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// cleanup on ribbons list to rtemoved finished ribbons</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, t = <span class="built_in">this</span>._ribbons.length; i &lt; t; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">this</span>._ribbons[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">this</span>._ribbons.splice(i, <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// draw new ribbons </span></span><br><span class="line">            <span class="built_in">this</span>._context.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>._width, <span class="built_in">this</span>._height);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; <span class="built_in">this</span>._ribbons.length; ++a) <span class="comment">// single ribbon</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> ribbon = <span class="built_in">this</span>._ribbons[a],</span><br><span class="line">                numSections = ribbon.length,</span><br><span class="line">                numDone = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">0</span>; b &lt; numSections; ++b) <span class="comment">// ribbon section</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>._drawRibbonSection(ribbon[b]))</span><br><span class="line">                    &#123;</span><br><span class="line">                        numDone++; <span class="comment">// section done</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (numDone &gt;= numSections) <span class="comment">// ribbon done</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">this</span>._ribbons[a] = <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// maintain optional number of ribbons on canvas</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>._ribbons.length &lt; <span class="built_in">this</span>._options.ribbonCount)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">this</span>.addRibbon();</span><br><span class="line">            &#125;</span><br><span class="line">            requestAnimationFrame(<span class="built_in">this</span>._onDraw);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update container size info</span></span><br><span class="line">        _onResize: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> screen = screenInfo(e);</span><br><span class="line">            <span class="built_in">this</span>._width = screen.width;</span><br><span class="line">            <span class="built_in">this</span>._height = screen.height;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>._canvas)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">this</span>._canvas.width = <span class="built_in">this</span>._width;</span><br><span class="line">                <span class="built_in">this</span>._canvas.height = <span class="built_in">this</span>._height;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._context)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">this</span>._context.globalAlpha = <span class="built_in">this</span>._options.colorAlpha;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update container size info</span></span><br><span class="line">        _onScroll: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> screen = screenInfo(e);</span><br><span class="line">            <span class="built_in">this</span>._scroll = screen.scrolly;</span><br><span class="line">        &#125; &#125;;</span><br><span class="line">    <span class="comment">// export</span></span><br><span class="line">    <span class="keyword">return</span> Factory;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">new</span> Ribbons();</span><br></pre></td></tr></table></figure>

<p>找到<code>canvas_ribbon</code>配置，设置成刚才新加的js文件路径。我这里就是<code>/js/ribbon/ribbon.js</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># Internal version: 1.0.0</span></span><br><span class="line">  <span class="attr">canvas_ribbon:</span> <span class="string">/js/ribbon/ribbon.js</span></span><br></pre></td></tr></table></figure>

<h4 id="背景彩带自定义颜色"><a href="#背景彩带自定义颜色" class="headerlink" title="背景彩带自定义颜色"></a>背景彩带自定义颜色</h4><p>在<code>ribbon.js</code>文件找到以下配置段，可以修改<code>colorSaturation</code> <code>colorBrightness</code> 调整彩带颜色<br>还有其他配置，大家可以看一下注释的意思</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">this</span>._options = &#123;</span><br><span class="line">    <span class="comment">// ribbon color HSL saturation amount</span></span><br><span class="line">    colorSaturation: <span class="string">&quot;80%&quot;</span>,</span><br><span class="line">    <span class="comment">// ribbon color HSL brightness amount</span></span><br><span class="line">    colorBrightness: <span class="string">&quot;60%&quot;</span>,</span><br><span class="line">    <span class="comment">// ribbon color opacity amount</span></span><br><span class="line">    colorAlpha: <span class="number">0.65</span>,</span><br><span class="line">    <span class="comment">// how fast to cycle through colors in the HSL color space</span></span><br><span class="line">    colorCycleSpeed: <span class="number">6</span>,</span><br><span class="line">    <span class="comment">// where to start from on the Y axis on each side (top|min, middle|center, bottom|max, random)</span></span><br><span class="line">    verticalPosition: <span class="string">&quot;center&quot;</span>,</span><br><span class="line">    <span class="comment">// how fast to get to the other side of the screen</span></span><br><span class="line">    horizontalSpeed: <span class="number">200</span>,</span><br><span class="line">    <span class="comment">// how many ribbons to keep on screen at any given time</span></span><br><span class="line">    ribbonCount: <span class="number">3</span>,</span><br><span class="line">    <span class="comment">// add stroke along with ribbon fill colors</span></span><br><span class="line">    strokeSize: <span class="number">0</span>,</span><br><span class="line">    <span class="comment">// move ribbons vertically by a factor on page scroll</span></span><br><span class="line">    parallaxAmount: <span class="number">-0.5</span>,</span><br><span class="line">    <span class="comment">// add animation effect to each ribbon section over time</span></span><br><span class="line">    animateSections: <span class="literal">true</span> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="背景彩带自定义颜色-1"><a href="#背景彩带自定义颜色-1" class="headerlink" title="背景彩带自定义颜色"></a>背景彩带自定义颜色</h3>]]></content>
      <categories>
        <category>博客搭建</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
</search>
